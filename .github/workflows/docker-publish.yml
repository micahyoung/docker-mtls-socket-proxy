name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
    branches:
      - main
env:
  IMAGE_NAME: docker-mtls-socket-proxy
jobs:
  push-linux:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      IMAGE_OS: alpine
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file Dockerfile.linux --tag $IMAGE_NAME

      - name: Test
        run: |
          mkdir -p $HOME/.docker

          docker run --detach \
              --name tlsproxy \
              --publish 23760:2376 \
              --volume $HOME/.docker:/certs \
              --volume /var/run/docker.sock:/var/run/docker.sock \
              --restart always \
              docker-mtls-socket-proxy

          docker logs -f tlsproxy &
          
          # wait for certs to be generated
          sleep 10
          
          # Test connection
          export DOCKER_HOST="tcp://localhost:23760"
          export DOCKER_TLS_VERIFY="1"
          export DOCKER_CERT_PATH="$HOME/.docker"

          docker info

      - name: Log into registry
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/${IMAGE_NAME}:${IMAGE_OS}

          echo IMAGE_ID=${IMAGE_ID}

          docker tag ${IMAGE_NAME} ${IMAGE_ID}
          docker push ${IMAGE_ID}

  push-windows:
    runs-on: windows-latest
    if: github.event_name == 'push'
    env:
      IMAGE_OS: nanoserver-1809
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile.windows --tag ${env:IMAGE_NAME} --build-arg os_tag=1809

      - name: Test
        run: |
          docker run --detach `
              --name tlsproxy `
              --publish 23760:2376 `
              --volume $env:USERPROFILE\.docker:c:/certs `
              --volume \\.\pipe\docker_engine:\\.\pipe\docker_engine `
              --restart always `
              docker-mtls-socket-proxy

          Start-Process -NoNewWindow -FilePath docker -ArgumentList "logs -f tlsproxy"
 
          # wait for certs to be generated
          Start-Sleep 30

          # Test connection
          $env:DOCKER_HOST="tcp://localhost:23760"
          $env:DOCKER_TLS_VERIFY="1"
          $env:DOCKER_CERT_PATH="$env:USERPROFILE\.docker"
          
          docker info

      - name: Log into registry
        run: |
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          $IMAGE_ID="ghcr.io/${{ github.repository }}/${env:IMAGE_NAME}:${env:IMAGE_OS}"

          echo IMAGE_ID=${IMAGE_ID}

          docker tag ${env:IMAGE_NAME} ${IMAGE_ID}
          docker push ${IMAGE_ID}
